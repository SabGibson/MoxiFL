from typing import Protocol


class MoxiNetworkProtocol(Protocol):

    @property
    def network_id(self): ...

    @network_id.setter
    def network_id(self, new_value): ...

    @property
    def network_type(self): ...

    @network_type.setter
    def model_type(self, new_value): ...

    @property
    def network_type(self): ...

    @network_type.setter
    def network_type(self, new_value): ...

    @property
    def max_rounds(self): ...

    @max_rounds.setter
    def max_rounds(self, new_value: int): ...

    def populate_network(self, *args, **kwargs): ...

    def train(self): ...

    def validate(self, dataset): ...


class MoxiWorkerProtocol(Protocol):

    def train_local(self, *args, **kwargs): ...

    def send_updates(self, *args, **kwargs): ...

    def compute_update(self, *args, **kwargs): ...

    def run(self, *args, **kwargs): ...
